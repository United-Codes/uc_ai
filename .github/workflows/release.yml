name: Build and Attach Release Assets

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-and-attach:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: |
          chmod +x scripts/generate_install_script_complete.sh
          chmod +x scripts/generate_upgrade_script.sh

      - name: Generate installation scripts
        run: |
          cd scripts
          ./generate_install_script_complete.sh

      - name: Generate upgrade script
        run: |
          cd scripts
          ./generate_upgrade_script.sh

      - name: Find migration file for release
        id: find_migration
        run: |
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          echo "Release tag: $RELEASE_TAG"

          # Extract version from tag (remove 'v' prefix if present)
          VERSION=${RELEASE_TAG#v}
          echo "Version: $VERSION"

          # Look for migration file ending with this version
          MIGRATION_FILE=$(find src/migrations -name "*_to_v${VERSION}.sql" | head -1)

          if [ -n "$MIGRATION_FILE" ]; then
            echo "Found migration file: $MIGRATION_FILE"
            echo "migration_file=$MIGRATION_FILE" >> $GITHUB_OUTPUT
            echo "has_migration=true" >> $GITHUB_OUTPUT
          else
            echo "No migration file found for version $VERSION"
            echo "has_migration=false" >> $GITHUB_OUTPUT
          fi

      - name: Verify generated files
        run: |
          echo "Checking generated files..."
          ls -la install_uc_ai_complete.sql
          ls -la install_uc_ai_complete_with_logger.sql
          ls -la upgrade_packages.sql
          echo "File sizes:"
          wc -l install_uc_ai_complete.sql
          wc -l install_uc_ai_complete_with_logger.sql
          wc -l upgrade_packages.sql

          if [ "${{ steps.find_migration.outputs.has_migration }}" = "true" ]; then
            echo "Migration file: ${{ steps.find_migration.outputs.migration_file }}"
            ls -la "${{ steps.find_migration.outputs.migration_file }}"
          fi

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            install_uc_ai_complete.sql
            install_uc_ai_complete_with_logger.sql
            ./src/dependencies/logger_3.1.1/logger_no_op.sql
            upgrade_packages.sql
            ${{ steps.find_migration.outputs.has_migration == 'true' && steps.find_migration.outputs.migration_file || '' }}
            uninstall.sql
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
